-- MySQL Script generated by MySQL Workbench
-- 05/26/16 11:48:46
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema KBPS_SYSTEM
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `KBPS_SYSTEM` ;

-- -----------------------------------------------------
-- Schema KBPS_SYSTEM
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `KBPS_SYSTEM` DEFAULT CHARACTER SET utf8 ;
-- -----------------------------------------------------
-- Schema user_management
-- -----------------------------------------------------
-- 
-- 
DROP SCHEMA IF EXISTS `user_management` ;

-- -----------------------------------------------------
-- Schema user_management
--
-- 
-- 
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `user_management` ;
USE `KBPS_SYSTEM` ;

-- -----------------------------------------------------
-- Table `KBPS_SYSTEM`.`disease`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `KBPS_SYSTEM`.`disease` ;

CREATE TABLE IF NOT EXISTS `KBPS_SYSTEM`.`disease` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `Name` VARCHAR(128) NOT NULL,
  `Diagnosis` VARCHAR(1024) NULL,
  `Management` VARCHAR(1024) NULL,
  `Epidemiology` VARCHAR(1024) NULL,
  `Category` VARCHAR(128) NULL,
  `Description` VARCHAR(1024) NULL,
  `Causes` VARCHAR(1024) NULL,
  `Mechanism` VARCHAR(1024) NULL,
  `Prognosis` VARCHAR(1024) NULL,
  `Prevention` VARCHAR(1024) NULL,
  PRIMARY KEY (`ID`),
  INDEX `index2` (`Name` ASC),
  UNIQUE INDEX `ID_UNIQUE` (`ID` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `KBPS_SYSTEM`.`medicine`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `KBPS_SYSTEM`.`medicine` ;

CREATE TABLE IF NOT EXISTS `KBPS_SYSTEM`.`medicine` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `Name` VARCHAR(128) NOT NULL,
  `Category` VARCHAR(128) NULL,
  `Description` VARCHAR(1024) NULL,
  `Property` VARCHAR(1024) NULL,
  `Adverse_effect` VARCHAR(1024) NULL,
  `Pharmacokinetics` VARCHAR(1024) NULL,
  `Mechanism` VARCHAR(1024) NULL,
  PRIMARY KEY (`ID`),
  INDEX `index2` (`Name` ASC),
  UNIQUE INDEX `ID_UNIQUE` (`ID` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `KBPS_SYSTEM`.`symptom`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `KBPS_SYSTEM`.`symptom` ;

CREATE TABLE IF NOT EXISTS `KBPS_SYSTEM`.`symptom` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `Name` VARCHAR(128) NOT NULL,
  `Category` VARCHAR(128) NULL,
  `Description` VARCHAR(1024) NULL,
  PRIMARY KEY (`ID`),
  INDEX `index2` (`Name` ASC),
  UNIQUE INDEX `ID_UNIQUE` (`ID` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `KBPS_SYSTEM`.`Incompatibility`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `KBPS_SYSTEM`.`Incompatibility` ;

CREATE TABLE IF NOT EXISTS `KBPS_SYSTEM`.`Incompatibility` (
  `medicine ID` INT NOT NULL,
  `medicine_ID2` INT NOT NULL,
  PRIMARY KEY (`medicine ID`, `medicine_ID2`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `KBPS_SYSTEM`.`doctor`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `KBPS_SYSTEM`.`doctor` ;

CREATE TABLE IF NOT EXISTS `KBPS_SYSTEM`.`doctor` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `Name` VARCHAR(128) NOT NULL,
  `Gender` CHAR(1) NOT NULL,
  `Specialty` VARCHAR(128) NULL,
  `Phone` VARCHAR(32) NULL,
  `Age` INT NOT NULL,
  PRIMARY KEY (`ID`),
  UNIQUE INDEX `ID_UNIQUE` (`ID` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `KBPS_SYSTEM`.`patient`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `KBPS_SYSTEM`.`patient` ;

CREATE TABLE IF NOT EXISTS `KBPS_SYSTEM`.`patient` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `Name` VARCHAR(128) NOT NULL,
  `Gender` CHAR(1) NOT NULL,
  `Age` INT NOT NULL,
  `Phone` VARCHAR(32) NULL,
  PRIMARY KEY (`ID`),
  UNIQUE INDEX `ID_UNIQUE` (`ID` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `KBPS_SYSTEM`.`prescription`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `KBPS_SYSTEM`.`prescription` ;

CREATE TABLE IF NOT EXISTS `KBPS_SYSTEM`.`prescription` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `patient_ID` INT NOT NULL,
  `doctor_ID` INT NOT NULL,
  `Content` VARCHAR(1024) NULL,
  `Date` DATE NOT NULL,
  PRIMARY KEY (`ID`),
  INDEX `fk_prescription_doctor1_idx` (`doctor_ID` ASC),
  INDEX `fk_prescription_patient1_idx` (`patient_ID` ASC),
  UNIQUE INDEX `ID_UNIQUE` (`ID` ASC),
  CONSTRAINT `fk_prescription_doctor1`
    FOREIGN KEY (`doctor_ID`)
    REFERENCES `KBPS_SYSTEM`.`doctor` (`ID`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE,
  CONSTRAINT `fk_prescription_patient1`
    FOREIGN KEY (`patient_ID`)
    REFERENCES `KBPS_SYSTEM`.`patient` (`ID`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `KBPS_SYSTEM`.`Dise_med`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `KBPS_SYSTEM`.`Dise_med` ;

CREATE TABLE IF NOT EXISTS `KBPS_SYSTEM`.`Dise_med` (
  `disease_ID` INT NOT NULL,
  `medicine_ID` INT NOT NULL,
  PRIMARY KEY (`disease_ID`, `medicine_ID`),
  INDEX `fk_disease_has_medicine_medicine1_idx` (`medicine_ID` ASC),
  INDEX `fk_disease_has_medicine_disease_idx` (`disease_ID` ASC),
  CONSTRAINT `fk_disease_has_medicine_disease`
    FOREIGN KEY (`disease_ID`)
    REFERENCES `KBPS_SYSTEM`.`disease` (`ID`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE,
  CONSTRAINT `fk_disease_has_medicine_medicine1`
    FOREIGN KEY (`medicine_ID`)
    REFERENCES `KBPS_SYSTEM`.`medicine` (`ID`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `KBPS_SYSTEM`.`dise_symp`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `KBPS_SYSTEM`.`dise_symp` ;

CREATE TABLE IF NOT EXISTS `KBPS_SYSTEM`.`dise_symp` (
  `disease_ID` INT NOT NULL,
  `symptom_ID` INT NOT NULL,
  PRIMARY KEY (`disease_ID`, `symptom_ID`),
  INDEX `fk_disease_has_symptom_symptom1_idx` (`symptom_ID` ASC),
  INDEX `fk_disease_has_symptom_disease1_idx` (`disease_ID` ASC),
  CONSTRAINT `fk_disease_has_symptom_disease1`
    FOREIGN KEY (`disease_ID`)
    REFERENCES `KBPS_SYSTEM`.`disease` (`ID`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE,
  CONSTRAINT `fk_disease_has_symptom_symptom1`
    FOREIGN KEY (`symptom_ID`)
    REFERENCES `KBPS_SYSTEM`.`symptom` (`ID`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `KBPS_SYSTEM`.`symp_presc`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `KBPS_SYSTEM`.`symp_presc` ;

CREATE TABLE IF NOT EXISTS `KBPS_SYSTEM`.`symp_presc` (
  `prescription_ID` INT NOT NULL,
  `symptom_ID` INT NOT NULL,
  PRIMARY KEY (`prescription_ID`, `symptom_ID`),
  INDEX `fk_prescription_has_symptom_symptom1_idx` (`symptom_ID` ASC),
  INDEX `fk_prescription_has_symptom_prescription1_idx` (`prescription_ID` ASC),
  CONSTRAINT `fk_prescription_has_symptom_prescription1`
    FOREIGN KEY (`prescription_ID`)
    REFERENCES `KBPS_SYSTEM`.`prescription` (`ID`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_prescription_has_symptom_symptom1`
    FOREIGN KEY (`symptom_ID`)
    REFERENCES `KBPS_SYSTEM`.`symptom` (`ID`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `KBPS_SYSTEM`.`presc_med`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `KBPS_SYSTEM`.`presc_med` ;

CREATE TABLE IF NOT EXISTS `KBPS_SYSTEM`.`presc_med` (
  `prescription_ID` INT NOT NULL,
  `medicine_ID` INT NOT NULL,
  `amount` INT NOT NULL,
  PRIMARY KEY (`prescription_ID`, `medicine_ID`),
  INDEX `fk_prescription_has_medicine_medicine1_idx` (`medicine_ID` ASC),
  INDEX `fk_prescription_has_medicine_prescription1_idx` (`prescription_ID` ASC),
  CONSTRAINT `fk_prescription_has_medicine_prescription1`
    FOREIGN KEY (`prescription_ID`)
    REFERENCES `KBPS_SYSTEM`.`prescription` (`ID`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_prescription_has_medicine_medicine1`
    FOREIGN KEY (`medicine_ID`)
    REFERENCES `KBPS_SYSTEM`.`medicine` (`ID`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `KBPS_SYSTEM`.`dise_presc`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `KBPS_SYSTEM`.`dise_presc` ;

CREATE TABLE IF NOT EXISTS `KBPS_SYSTEM`.`dise_presc` (
  `prescription_ID` INT NOT NULL,
  `disease_ID` INT NOT NULL,
  PRIMARY KEY (`prescription_ID`, `disease_ID`),
  INDEX `fk_prescription_has_disease_disease1_idx` (`disease_ID` ASC),
  INDEX `fk_prescription_has_disease_prescription1_idx` (`prescription_ID` ASC),
  CONSTRAINT `fk_prescription_has_disease_prescription1`
    FOREIGN KEY (`prescription_ID`)
    REFERENCES `KBPS_SYSTEM`.`prescription` (`ID`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_prescription_has_disease_disease1`
    FOREIGN KEY (`disease_ID`)
    REFERENCES `KBPS_SYSTEM`.`disease` (`ID`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `KBPS_SYSTEM`.`symp_med`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `KBPS_SYSTEM`.`symp_med` ;

CREATE TABLE IF NOT EXISTS `KBPS_SYSTEM`.`symp_med` (
  `medicine_ID` INT NOT NULL,
  `symptom_ID` INT NOT NULL,
  PRIMARY KEY (`medicine_ID`, `symptom_ID`),
  INDEX `fk_medicine_has_symptom_symptom1_idx` (`symptom_ID` ASC),
  INDEX `fk_medicine_has_symptom_medicine1_idx` (`medicine_ID` ASC),
  CONSTRAINT `fk_medicine_has_symptom_medicine1`
    FOREIGN KEY (`medicine_ID`)
    REFERENCES `KBPS_SYSTEM`.`medicine` (`ID`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE,
  CONSTRAINT `fk_medicine_has_symptom_symptom1`
    FOREIGN KEY (`symptom_ID`)
    REFERENCES `KBPS_SYSTEM`.`symptom` (`ID`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `KBPS_SYSTEM`.`incompatibility`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `KBPS_SYSTEM`.`incompatibility` ;

CREATE TABLE IF NOT EXISTS `KBPS_SYSTEM`.`incompatibility` (
  `medicine_ID` INT NOT NULL,
  `medicine_ID1` INT NOT NULL,
  PRIMARY KEY (`medicine_ID`, `medicine_ID1`),
  INDEX `fk_medicine_has_medicine_medicine2_idx` (`medicine_ID1` ASC),
  INDEX `fk_medicine_has_medicine_medicine1_idx` (`medicine_ID` ASC),
  CONSTRAINT `fk_medicine_has_medicine_medicine1`
    FOREIGN KEY (`medicine_ID`)
    REFERENCES `KBPS_SYSTEM`.`medicine` (`ID`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_medicine_has_medicine_medicine2`
    FOREIGN KEY (`medicine_ID1`)
    REFERENCES `KBPS_SYSTEM`.`medicine` (`ID`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `KBPS_SYSTEM`.`system_log`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `KBPS_SYSTEM`.`system_log` ;

CREATE TABLE IF NOT EXISTS `KBPS_SYSTEM`.`system_log` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `time` VARCHAR(40) NULL,
  `operation` VARCHAR(45) NOT NULL,
  `operator` VARCHAR(45) NULL DEFAULT 'admin',
  `medicine_name/diease_name/doctor_name/` VARCHAR(128) NOT NULL,
  `type` VARCHAR(10) NOT NULL,
  PRIMARY KEY (`ID`),
  INDEX `index2` (`medicine_name/diease_name/doctor_name/` ASC),
  INDEX `index3` (`operation` ASC),
  UNIQUE INDEX `ID_UNIQUE` (`ID` ASC))
ENGINE = InnoDB;

USE `user_management` ;

-- -----------------------------------------------------
-- Table `user_management`.`login_info`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `user_management`.`login_info` ;

CREATE TABLE IF NOT EXISTS `user_management`.`login_info` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `user_name` VARCHAR(45) NOT NULL,
  `password` VARCHAR(45) NOT NULL,
  `role` VARCHAR(10) NOT NULL,
  PRIMARY KEY (`ID`),
  UNIQUE INDEX `ID_UNIQUE` (`ID` ASC))
ENGINE = InnoDB;

USE `KBPS_SYSTEM` ;

-- -----------------------------------------------------
-- Placeholder table for view `KBPS_SYSTEM`.`billing_view`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `KBPS_SYSTEM`.`billing_view` (`patient_ID` INT, `medicine_ID` INT, `medicine_account` INT);

-- -----------------------------------------------------
-- Placeholder table for view `KBPS_SYSTEM`.`medicine_view`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `KBPS_SYSTEM`.`medicine_view` (`Name` INT, `Description` INT, `Property` INT, `Adverse_effect` INT, `Mechanism` INT);

-- -----------------------------------------------------
-- View `KBPS_SYSTEM`.`billing_view`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `KBPS_SYSTEM`.`billing_view` ;
DROP TABLE IF EXISTS `KBPS_SYSTEM`.`billing_view`;
USE `KBPS_SYSTEM`;
CREATE  OR REPLACE VIEW billing_view(patient_ID,medicine_ID,medicine_account) AS
SELECT prescription.patient_ID,presc_med.medicine_ID,presc_med.amount 
FROM prescription,presc_med
WHERE prescription.ID=presc_med.prescription_ID;

-- -----------------------------------------------------
-- View `KBPS_SYSTEM`.`medicine_view`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `KBPS_SYSTEM`.`medicine_view` ;
DROP TABLE IF EXISTS `KBPS_SYSTEM`.`medicine_view`;
USE `KBPS_SYSTEM`;
CREATE  OR REPLACE VIEW medicine_view AS
select Name,Description,Property,Adverse_effect,Mechanism
from medicine;
USE `KBPS_SYSTEM`;

DELIMITER $$

USE `KBPS_SYSTEM`$$
DROP TRIGGER IF EXISTS `KBPS_SYSTEM`.`disease_AFTER_INSERT` $$
USE `KBPS_SYSTEM`$$
CREATE DEFINER = CURRENT_USER TRIGGER `KBPS_SYSTEM`.`disease_AFTER_INSERT` 
AFTER INSERT ON `disease`
 /*REFERENCING NEW ROW AS New*/
FOR EACH ROW
      INSERT INTO `system_log` (`ID`, `time`, `operation`, `operator`, `medicine_name/diease_name/doctor_name/`, `type`) 
      VALUES (NULL,CURRENT_DATE, 'INSERT', 'admin', NEW.Name, 'DIEASE');$$


USE `KBPS_SYSTEM`$$
DROP TRIGGER IF EXISTS `KBPS_SYSTEM`.`disease_AFTER_UPDATE` $$
USE `KBPS_SYSTEM`$$
CREATE DEFINER = CURRENT_USER TRIGGER `KBPS_SYSTEM`.`disease_AFTER_UPDATE` 
AFTER UPDATE ON `disease` 
FOR EACH ROW
      INSERT INTO `system_log` (`ID`, `time`, `operation`, `operator`, `medicine_name/diease_name/doctor_name/`, `type`) 
      VALUES (NULL, CURRENT_DATE, 'UPDATE', 'admin', NEW.Name, 'DIEASE');$$


USE `KBPS_SYSTEM`$$
DROP TRIGGER IF EXISTS `KBPS_SYSTEM`.`disease_AFTER_DELETE` $$
USE `KBPS_SYSTEM`$$
CREATE DEFINER = CURRENT_USER TRIGGER `KBPS_SYSTEM`.`disease_AFTER_DELETE` 
AFTER DELETE ON `disease` 
FOR EACH ROW
      INSERT INTO `system_log` (`ID`, `time`, `operation`, `operator`, `medicine_name/diease_name/doctor_name/`, `type`) 
      VALUES (NULL, CURRENT_DATE, 'DELETE', 'admin', OLD.Name, 'DIEASE');$$


USE `KBPS_SYSTEM`$$
DROP TRIGGER IF EXISTS `KBPS_SYSTEM`.`medicine_AFTER_INSERT` $$
USE `KBPS_SYSTEM`$$
CREATE DEFINER = CURRENT_USER TRIGGER `KBPS_SYSTEM`.`medicine_AFTER_INSERT` 
AFTER INSERT ON `medicine` 
 /*REFERENCING NEW ROW AS New*/
FOR EACH ROW
      INSERT INTO `system_log` (`ID`, `time`, `operation`, `operator`, `medicine_name/diease_name/doctor_name/`, `type`) 
      VALUES (NULL,CURRENT_DATE, 'INSERT', 'admin', New.Name, 'MEDICNE');$$


USE `KBPS_SYSTEM`$$
DROP TRIGGER IF EXISTS `KBPS_SYSTEM`.`medicine_AFTER_UPDATE` $$
USE `KBPS_SYSTEM`$$
CREATE DEFINER = CURRENT_USER TRIGGER `KBPS_SYSTEM`.`medicine_AFTER_UPDATE`
AFTER UPDATE ON `medicine` 
 /*REFERENCING NEW ROW AS New*/
FOR EACH ROW
      INSERT INTO `system_log` (`ID`, `time`, `operation`, `operator`, `medicine_name/diease_name/doctor_name/`, `type`) 
      VALUES (NULL,CURRENT_DATE, 'UPDATE', 'admin', New.Name, 'MEDICNE');$$


USE `KBPS_SYSTEM`$$
DROP TRIGGER IF EXISTS `KBPS_SYSTEM`.`medicine_AFTER_DELETE` $$
USE `KBPS_SYSTEM`$$
CREATE DEFINER = CURRENT_USER TRIGGER `KBPS_SYSTEM`.`medicine_AFTER_DELETE`
AFTER DELETE ON `medicine` 
FOR EACH ROW
      INSERT INTO `system_log` (`ID`, `time`, `operation`, `operator`, `medicine_name/diease_name/doctor_name/`, `type`) 
      VALUES (NULL,CURRENT_DATE, 'DELETE', 'admin', OLD.Name, 'MEDICNE');$$


USE `KBPS_SYSTEM`$$
DROP TRIGGER IF EXISTS `KBPS_SYSTEM`.`doctor_AFTER_INSERT` $$
USE `KBPS_SYSTEM`$$
CREATE DEFINER = CURRENT_USER TRIGGER `KBPS_SYSTEM`.`doctor_AFTER_INSERT` 
AFTER INSERT ON `doctor` FOR EACH ROW
      INSERT INTO `system_log` (`ID`, `time`, `operation`, `operator`, `medicine_name/diease_name/doctor_name/`, `type`) 
      VALUES (NULL,CURRENT_DATE, 'INSERT', 'admin', New.Name, 'DOCTOR');$$


USE `KBPS_SYSTEM`$$
DROP TRIGGER IF EXISTS `KBPS_SYSTEM`.`doctor_AFTER_UPDATE` $$
USE `KBPS_SYSTEM`$$
CREATE DEFINER = CURRENT_USER TRIGGER `KBPS_SYSTEM`.`doctor_AFTER_UPDATE`
 AFTER UPDATE ON `doctor` FOR EACH ROW
      INSERT INTO `system_log` (`ID`, `time`, `operation`, `operator`, `medicine_name/diease_name/doctor_name/`, `type`) 
      VALUES (NULL,CURRENT_DATE, 'UPDATE', 'admin', New.Name, 'DOCTOR');$$


USE `KBPS_SYSTEM`$$
DROP TRIGGER IF EXISTS `KBPS_SYSTEM`.`doctor_AFTER_DELETE` $$
USE `KBPS_SYSTEM`$$
CREATE DEFINER = CURRENT_USER TRIGGER `KBPS_SYSTEM`.`doctor_AFTER_DELETE` 
AFTER DELETE ON `doctor` FOR EACH ROW
      INSERT INTO `system_log` (`ID`, `time`, `operation`, `operator`, `medicine_name/diease_name/doctor_name/`, `type`) 
      VALUES (NULL,CURRENT_DATE, 'DELETE', 'admin', OLD.Name, 'DOCTOR');$$


DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Data for table `KBPS_SYSTEM`.`disease`
-- -----------------------------------------------------
START TRANSACTION;
USE `KBPS_SYSTEM`;
INSERT INTO `KBPS_SYSTEM`.`disease` (`ID`, `Name`, `Diagnosis`, `Management`, `Epidemiology`, `Category`, `Description`, `Causes`, `Mechanism`, `Prognosis`, `Prevention`) VALUES (1, 'influenza', 'Influenza illness can include several non-specific symptoms, such as fever, muscle aches, headache, lack of energy, dry cough, sore throat, and runny nose. The fever and body aches can last 3-5 days and the cough and lack of energy may last for 2 or more weeks. The symptoms of the flu are more severe than their common-cold equivalents.', 'Antiviral drugs can diminish symptoms and shorten the time of the disease by 1 or 2 days. They also can prevent serious flu complications, such as pneumonia. For people with a high risk medical condition, treatment with an antiviral drug can mean the difference between having milder illness instead of very serious illness that could result in a hospital stay. The two main antivirals used in the treatment and prevention of influenza are oseltamivir and zanamivir. Symptomatic therapy is also important to overcome the symptoms of influenza, this include analgesics, antihistamines, decongestants and cough suppressants.', 'The CDC estimates that 5 to 20 percent of Americans are affected by the flu during each flu season, which typically lasts from October to March. Children are 2 to 3 times more likely than adults to get sick with the flu, and children frequently spread the virus to others. For elderly people, newborn babies, pregnant women, and people with certain chronic illnesses, the flu and its complications can be life-threatening. Although most people recover from the illness, between 3,000 and 49,000 US citizens die from the flu and its complications every year.[4]', NULL, 'nfluenza, commonly known as flu, is an infectious disease of birds and mammals caused by RNA viruses of the biological family Orthomyxoviridae (the influenza viruses). In humans, common symptoms of influenza infection are fever, sore throat, muscle pains, severe headache, coughing, weakness and general discomfort.[1] In more serious cases, influenza causes pneumonia, which can be fatal, particularly in young children and the elderly. Sometimes confused with the common cold, influenza is a much more severe disease and is caused by a different type of virus.[2] Although nausea and vomiting can be produced, especially in children,[1] these symptoms are more characteristic of the unrelated gastroenteritis.', 'Influenza infection is caused by the influenza virus that belong to the family Orthomyxoviridae. Three types of influenza virus have been reported to cause clinical illness in humans: types A, B, and C. Influenza virus can be found in humans, as well as in poultry, pigs, and bats.', NULL, NULL, NULL);
INSERT INTO `KBPS_SYSTEM`.`disease` (`ID`, `Name`, `Diagnosis`, `Management`, `Epidemiology`, `Category`, `Description`, `Causes`, `Mechanism`, `Prognosis`, `Prevention`) VALUES (2, 'common cold', 'The symptoms of a cold usually resolve after about one week, but can last up to 14 days. Symptoms may be more severe in infants and young children.', ' Although the disease is generally mild and self-limiting, patients with common colds often seek professional medical help, use over-the-counter drugs, and may miss school or work days. The annual cumulative societal cost of the common cold in the United States is billions of dollars.', '', NULL, 'Acute viral nasopharyngitis, is a highly contagious, viral infectious disease of the upper respiratory system, primarily caused by picornaviruses or coronaviruses.', 'Acute viral nasopharyngitis ', 'Acute viral nasopharyngitis ', NULL, NULL);
INSERT INTO `KBPS_SYSTEM`.`disease` (`ID`, `Name`, `Diagnosis`, `Management`, `Epidemiology`, `Category`, `Description`, `Causes`, `Mechanism`, `Prognosis`, `Prevention`) VALUES (3, 'pneumonia', 'Community acquired pneumonia should be distinguished from healthcare-associated pneumonia as these diseases have different causative organism, prognosis, diagnostic and treatment guidelines.', 'The treatment of pneumonia involves three critical decisions: firstly whether the patient truly has pneumonia, secondly what is the severity of the pneumonia, and lastly whether hospitalization is required for adequate management. Most cases of pneumonia can be treated without hospitalization. Typically, oral antibiotics, rest, fluids, and home care are sufficient for complete resolution. However, people with pneumonia who are having trouble breathing, comorbidities, and the elderly may need more advanced treatment. If the symptoms get worse, the pneumonia does not improve with home treatment, or complications occur, the person will often have to be hospitalized.', 'neumonia is a common illness in all parts of the world. It is a major cause of death among all age groups. Mortality from pneumonia generally decreases with age until late adulthood. Elderly individuals, however, are at particular risk for pneumonia and associated mortality. More cases of pneumonia occur during the winter months than during other times of the year. Pneumonia occurs more commonly in males than females, and more often in African Americans than caucasians. People who are hospitalized for any reason are also at high risk for pneumonia. Following urinary tract infections, pneumonia is the second most common cause of nosocomial infections, and its prevalence is 15-20% of the total number.', NULL, 'Pneumonia is an illness of the lungs and respiratory system in which the alveoli (microscopic air-filled sacs of the lung responsible for absorbing oxygen from the atmosphere) become inflamed and flooded with fluid. Pneumonia can result from a variety of causes, including infection with bacteria, viruses, fungi, parasites, and chemical or physical injury to the lungs. Typical symptoms associated with pneumonia include cough, chest pain, fever, and difficulty in breathing. Diagnostic tools include x-rays and an examination of the sputum. Treatment depends on the cause of pneumonia; bacterial pneumonia is treated with antibiotics. Pneumonia is a common illness which occurs in all age groups, and is a leading cause of death among the elderly and people who are chronically and terminally ill. Vaccines to prevent certain types of pneumonia are available. The prognosis depends on the type of pneumonia, the appropriate treatment, any complications, and the person\'s underlying health.', 'Pneumonia can result from a variety of causes, including infection with bacteria, viruses, fungi, parasites, and chemical or physical injury to the lungs. The etiology will depend upon various factors such as age, immune status, geographical area, and comorbidities.', NULL, NULL, 'There are several ways to prevent infectious pneumonia. Appropriately treating underlying illnesses (such as AIDS), smoking cessation, vaccination against pneumococcal, and influenza are the commonly used methods.');
INSERT INTO `KBPS_SYSTEM`.`disease` (`ID`, `Name`, `Diagnosis`, `Management`, `Epidemiology`, `Category`, `Description`, `Causes`, `Mechanism`, `Prognosis`, `Prevention`) VALUES (4, 'enteritis', 'Generally a good history is the most important tool in distinguishing serious cases of enteritis from self-limiting ones. The presence of blood in the faeces, dehydration, cutaneous eruptions, presumed link with food exposure, as well as recent travel to endemic areas can prompt further investigation.', 'Viral diarrhea is usually self-limiting and is treated with rehydration. When bacterial causes are suspected (recent travel, food poisoning), antibiotics can be considered.', NULL, NULL, 'Enteritis is the inflammation of the small intestine (inflammation of the large intestine is termed colitis, while enterocolitis refers to an inflammation of both the large and small intestine.).', 'Acute enteritis is usually due to bacteria or viruses. When food is involved, foodborne illness is to be suspected. If other family members or members of the household are affected, this may signify infectious causes. Chronic enteritis can be due to Crohn\'s disease, giardiasis, tuberculosis, coeliac disease, or rarely due to Whipple\'s disease.', NULL, NULL, NULL);

COMMIT;


-- -----------------------------------------------------
-- Data for table `KBPS_SYSTEM`.`medicine`
-- -----------------------------------------------------
START TRANSACTION;
USE `KBPS_SYSTEM`;
INSERT INTO `KBPS_SYSTEM`.`medicine` (`ID`, `Name`, `Category`, `Description`, `Property`, `Adverse_effect`, `Pharmacokinetics`, `Mechanism`) VALUES (1, 'oseltamivir', NULL, 'Oseltamivir is a antiviral that is FDA approved for the treatment of influenza A and influenza B (flu) virus. Common adverse reactions include rash, dermatitis, urticaria, eczema, toxic epidermal necrolysis, Stevens-Johnson Syndrome, erythema multiforme, hepatitis, liver function tests abnormal, arrhythmia, gastrointestinal bleeding, hemorrhagic colitis, seizure, aggravation of diabetes, psychiatric conditions.', NULL, NULL, NULL, NULL);
INSERT INTO `KBPS_SYSTEM`.`medicine` (`ID`, `Name`, `Category`, `Description`, `Property`, `Adverse_effect`, `Pharmacokinetics`, `Mechanism`) VALUES (2, 'Zanamivir', NULL, 'Zanamivir is a antiviral agent that is FDA approved for the treatment of influenza and prophylaxis of influenza. Common adverse reactions include sinusitis, dizziness, fever and/or chills, arthralgia and articular rheumatism.', NULL, NULL, NULL, NULL);
INSERT INTO `KBPS_SYSTEM`.`medicine` (`ID`, `Name`, `Category`, `Description`, `Property`, `Adverse_effect`, `Pharmacokinetics`, `Mechanism`) VALUES (3, 'medicine3', NULL, NULL, NULL, NULL, NULL, NULL);
INSERT INTO `KBPS_SYSTEM`.`medicine` (`ID`, `Name`, `Category`, `Description`, `Property`, `Adverse_effect`, `Pharmacokinetics`, `Mechanism`) VALUES (4, 'medicine4', NULL, NULL, NULL, NULL, NULL, NULL);
INSERT INTO `KBPS_SYSTEM`.`medicine` (`ID`, `Name`, `Category`, `Description`, `Property`, `Adverse_effect`, `Pharmacokinetics`, `Mechanism`) VALUES (5, 'medicine5', NULL, NULL, NULL, NULL, NULL, NULL);

COMMIT;


-- -----------------------------------------------------
-- Data for table `KBPS_SYSTEM`.`symptom`
-- -----------------------------------------------------
START TRANSACTION;
USE `KBPS_SYSTEM`;
INSERT INTO `KBPS_SYSTEM`.`symptom` (`ID`, `Name`, `Category`, `Description`) VALUES (1, 'fever', NULL, 'Fever, also known as pyrexia and febrile response,[1] is defined as having a temperature above the normal range due to an increase in the body\'s temperature set-point.[2][3] There is not a single agreed-upon upper limit for normal temperature with sources using values between 37.5 and 38.3 °C (99.5 and 100.9 °F).[1][4] The increase in set-point triggers increased muscle contraction and causes a feeling of cold.[5] This results in greater heat production and efforts to conserve heat.[6] When the set-point temperature returns to normal a person feels hot, becomes flushed, and may begin to sweat.[6] Rarely a fever may trigger a febrile seizure. This is more common in young children.[7] Fevers do not typically go higher than 41 to 42 °C (105.8 to 107.6 °F).[3]');
INSERT INTO `KBPS_SYSTEM`.`symptom` (`ID`, `Name`, `Category`, `Description`) VALUES (2, 'cough', NULL, 'A cough is a sudden and often repetitively occurring reflex which helps to clear the large breathing passages from secretions, irritants, foreign particles and microbes. The cough reflex consists of three phases: an inhalation, a forced exhalation against a closed glottis, and a violent release of air from the lungs following opening of the glottis, usually accompanied by a distinctive sound.[1] Coughing is either voluntary or involuntary.');
INSERT INTO `KBPS_SYSTEM`.`symptom` (`ID`, `Name`, `Category`, `Description`) VALUES (3, 'Rhinorrhea', NULL, 'Rhinorrhea or rhinorrhoea is a condition where the nasal cavity is filled with a significant amount of mucus fluid. The condition, commonly known as a runny nose, occurs relatively frequently. Rhinorrhea is a common symptom of allergies (hay fever) or certain diseases, such as the common cold. It can be a side effect of crying, exposure to cold temperatures, cocaine abuse[1] or withdrawal, such as from opioids like methadone.[2] Treatment for rhinorrhea is not usually necessary, but there are a number of medical treatments and preventive techniques available.');

COMMIT;


-- -----------------------------------------------------
-- Data for table `KBPS_SYSTEM`.`doctor`
-- -----------------------------------------------------
START TRANSACTION;
USE `KBPS_SYSTEM`;
INSERT INTO `KBPS_SYSTEM`.`doctor` (`ID`, `Name`, `Gender`, `Specialty`, `Phone`, `Age`) VALUES (1, 'Alice', 'F', 'physician', '15700000001', 41);
INSERT INTO `KBPS_SYSTEM`.`doctor` (`ID`, `Name`, `Gender`, `Specialty`, `Phone`, `Age`) VALUES (2, 'Bob', 'M', 'physician', '15700000002', 42);
INSERT INTO `KBPS_SYSTEM`.`doctor` (`ID`, `Name`, `Gender`, `Specialty`, `Phone`, `Age`) VALUES (3, 'Carl', 'F', 'physician', '15700000003', 43);

COMMIT;


-- -----------------------------------------------------
-- Data for table `KBPS_SYSTEM`.`patient`
-- -----------------------------------------------------
START TRANSACTION;
USE `KBPS_SYSTEM`;
INSERT INTO `KBPS_SYSTEM`.`patient` (`ID`, `Name`, `Gender`, `Age`, `Phone`) VALUES (1, 'patient1', 'F', 51, '15800000001');
INSERT INTO `KBPS_SYSTEM`.`patient` (`ID`, `Name`, `Gender`, `Age`, `Phone`) VALUES (2, 'patient2', 'F', 52, '15800000002');
INSERT INTO `KBPS_SYSTEM`.`patient` (`ID`, `Name`, `Gender`, `Age`, `Phone`) VALUES (3, 'patient3', 'F', 53, '15800000003');
INSERT INTO `KBPS_SYSTEM`.`patient` (`ID`, `Name`, `Gender`, `Age`, `Phone`) VALUES (4, 'patient4', 'F', 54, '15800000004');
INSERT INTO `KBPS_SYSTEM`.`patient` (`ID`, `Name`, `Gender`, `Age`, `Phone`) VALUES (5, 'patient5', 'F', 55, '15800000005');

COMMIT;


-- -----------------------------------------------------
-- Data for table `KBPS_SYSTEM`.`prescription`
-- -----------------------------------------------------
START TRANSACTION;
USE `KBPS_SYSTEM`;
INSERT INTO `KBPS_SYSTEM`.`prescription` (`ID`, `patient_ID`, `doctor_ID`, `Content`, `Date`) VALUES (1, 1, 1, 'demo of prescription :influenza', '2016-5-1');

COMMIT;


-- -----------------------------------------------------
-- Data for table `KBPS_SYSTEM`.`Dise_med`
-- -----------------------------------------------------
START TRANSACTION;
USE `KBPS_SYSTEM`;
INSERT INTO `KBPS_SYSTEM`.`Dise_med` (`disease_ID`, `medicine_ID`) VALUES (1, 1);
INSERT INTO `KBPS_SYSTEM`.`Dise_med` (`disease_ID`, `medicine_ID`) VALUES (1, 2);

COMMIT;


-- -----------------------------------------------------
-- Data for table `KBPS_SYSTEM`.`symp_presc`
-- -----------------------------------------------------
START TRANSACTION;
USE `KBPS_SYSTEM`;
INSERT INTO `KBPS_SYSTEM`.`symp_presc` (`prescription_ID`, `symptom_ID`) VALUES (1, 1);
INSERT INTO `KBPS_SYSTEM`.`symp_presc` (`prescription_ID`, `symptom_ID`) VALUES (1, 2);

COMMIT;


-- -----------------------------------------------------
-- Data for table `KBPS_SYSTEM`.`presc_med`
-- -----------------------------------------------------
START TRANSACTION;
USE `KBPS_SYSTEM`;
INSERT INTO `KBPS_SYSTEM`.`presc_med` (`prescription_ID`, `medicine_ID`, `amount`) VALUES (1, 1, 2);
INSERT INTO `KBPS_SYSTEM`.`presc_med` (`prescription_ID`, `medicine_ID`, `amount`) VALUES (1, 2, 5);

COMMIT;


-- -----------------------------------------------------
-- Data for table `KBPS_SYSTEM`.`dise_presc`
-- -----------------------------------------------------
START TRANSACTION;
USE `KBPS_SYSTEM`;
INSERT INTO `KBPS_SYSTEM`.`dise_presc` (`prescription_ID`, `disease_ID`) VALUES (1, 1);

COMMIT;

